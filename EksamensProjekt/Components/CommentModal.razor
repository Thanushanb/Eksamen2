@using Core

<!-- Modal vises kun hvis IsVisible er true -->
@if (IsVisible)
{
    <!-- Halvgennemsigtig baggrund der lukker modal ved klik -->
    <div class="modal-backdrop" @onclick="CloseModal"></div>

    <!-- Modalens dialogvindue -->
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal header med titel og luk-knap -->
            <div class="modal-header">
                <h5 class="modal-title">Kommentar til @Subgoal?.Name</h5>
                <button type="button" class="modal-close-btn" @onclick="CloseModal">×</button>
            </div>

            <!-- Modal body: viser kommentarer og giver mulighed for ny -->
            <div class="modal-body">
                <div class="comments-section">
                    @if (Comments != null && Comments.Any())
                    {
                        <!-- Liste over eksisterende kommentarer -->
                        @foreach (var comment in Comments)
                        {
                            <div class="comment-item @GetCommentRoleClass(comment.UserRole)">
                                <div class="comment-header">
                                    <div class="comment-user-info">
                                        <strong>@comment.UserName</strong>
                                        <span class="comment-role">@comment.UserRole</span>
                                    </div>
                                    <span class="comment-date">@comment.CreatedAt</span>
                                </div>
                                <div class="comment-text">
                                    @comment.Text
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <!-- Ingen kommentarer endnu -->
                        <p class="no-comments">Ingen kommentarer endnu</p>
                    }
                </div>

                <!-- Brugere med relevante roller kan tilføje kommentar -->
                @if (CurrentUser != null && (CurrentUser.Role == "Elev" || CurrentUser.Role == "Kok" || CurrentUser.Role == "Køkkenchef"))
                {
                    <div class="new-comment-section">
                        <h6>Tilføj kommentar</h6>
                        <textarea @bind="newComment" class="form-control comment-textarea" rows="3" placeholder="Skriv din kommentar her..."></textarea>
                    </div>
                }
            </div>

            <!-- Modal footer: luk og gem knapper -->
            <div class="modal-footer">
                <button type="button" class="btn-secondary" @onclick="CloseModal">Luk</button>

                @if (CurrentUser != null && (CurrentUser.Role == "Elev" || CurrentUser.Role == "Kok" || CurrentUser.Role == "Køkkenchef"))
                {
                    <button type="button" class="btn-primary" @onclick="HandleSaveComment">Gem kommentar</button>
                }
            </div>

        </div>
    </div>
}


@code {
    /// <summary>
    /// Angiver om modal-vinduet skal vises.
    /// </summary>
    [Parameter] public bool IsVisible { get; set; }

    /// <summary>
    /// Det delmål (Subgoal) som kommentarerne tilhører.
    /// </summary>
    [Parameter] public Subgoal? Subgoal { get; set; }

    /// <summary>
    /// Liste over eksisterende kommentarer til delmålet.
    /// </summary>
    [Parameter] public List<Comment>? Comments { get; set; }

    /// <summary>
    /// Den bruger der aktuelt er logget ind og kan kommentere.
    /// </summary>
    [Parameter] public User? CurrentUser { get; set; }

    /// <summary>
    /// Event callback der aktiveres når modal lukkes.
    /// </summary>
    [Parameter] public EventCallback OnClose { get; set; }

    /// <summary>
    /// Event callback der kaldes når en ny kommentar gemmes.
    /// </summary>
    [Parameter] public EventCallback<Comment> OnSaveComment { get; set; }

    /// <summary>
    /// Midlertidigt tekstfelt til ny kommentar.
    /// </summary>
    private string newComment = "";

    /// <summary>
    /// Lukker modal og rydder inputfeltet.
    /// </summary>
    private async Task CloseModal()
    {
        newComment = "";
        await OnClose.InvokeAsync();
    }

    /// <summary>
    /// Håndterer logik for at oprette og sende ny kommentar.
    /// Kommentaren bliver kun sendt hvis der er tekst og en bruger er logget ind.
    /// </summary>
    private async Task HandleSaveComment()
    {
        if (string.IsNullOrWhiteSpace(newComment) || CurrentUser == null)
            return;

        var comment = new Comment
        {
            Text = newComment,
            UserName = CurrentUser.Name,
            UserRole = CurrentUser.Role,
            UserId = CurrentUser._id,
            CreatedAt = DateTime.UtcNow
        };

        await OnSaveComment.InvokeAsync(comment);
        newComment = "";
    }

    /// <summary>
    /// Returnerer CSS-klasse baseret på brugerens rolle.
    /// Bruges til at style kommentarer forskelligt efter rolle.
    /// </summary>
    /// <param name="role">Brugerens rolle (Elev, Kok, Køkkenchef osv)</param>
    /// <returns>CSS klasse string</returns>
    private string GetCommentRoleClass(string role)
    {
        return role switch
        {
            "Elev" => "comment-role-student",
            "Kok" => "comment-role-chef",
            "Køkkenchef" => "comment-role-head-chef",
            _ => ""
        };
    }
}

